#!/usr/bin/env node
var fs = require('fs');
var path = require('path');
var grunt = require('grunt');
var commander = require('commander');
var color = require('colorful').color;
var helper = require('../lib/helper');
var exists = require('fs').existsSync;
var templates = {};
/*
 template directory
 */
var template = path.join(helper.initDir, "platform");
/*
 commander init
 */
commander
    .version(require('../package.json').version)
    .usage('[template]')
    .option('-v, --verbose', 'Show more infomation.')
    .option('-u, --upgrade', 'Update available template.')
    .option('-f, --force', 'Force to process the task.');
commander.on('--help', function () {
    console.log();
    console.log('   Available templates:');
    console.log();
    for (var template in templates) {
        console.log('    ' + template);
    }
    console.log();
    console.log('  Change init directory in ~/.spm/spmrc');
    console.log();
    console.log(color.magenta('    [init]'));
    console.log('    template = ~/.spm/init');
    console.log();
});
commander.parse(process.argv);
if (commander.upgrade) {
    helper.gitInstall('git@github.com:octojs/template-platform.git', template);
    return;
}
/*
 fetch template if not exist
 */
if (!exists(templates["platform"])) {
    helper.gitInstall('git@github.com:octojs/template-platform.git', template)
        .on('close', runTask);
} else {
    runTask();
}
/*
 run grunt init task
 */
function runTask() {
    grunt.task.loadTasks(path.join(__dirname, '../node_modules/grunt-init/tasks'));
    // fix windows directory by replace C:\ to C\:\
    var taskName = 'init:' + template.replace(/^([a-zA-Z]):\\/, '$1\\:\\');
    grunt.cli.tasks = [taskName];
    grunt.cli({});
}